I'll create a complete PHP web application with AdminLTE for your role-based dashboard system. Here's the structured codebase:

## 1. index.php (Main Entry Point)
```php
<?php
// index.php - Main entry point
require_once 'config.php';
require_once 'includes/session.php';
require_once 'includes/role_check.php';

// If user is logged in, redirect to their dashboard
if (isset($_SESSION['user_id'])) {
    $role = $_SESSION['role'];
    switch ($role) {
        case 'admin':
            header('Location: pages/admin_dashboard.php');
            exit();
        case 'manager':
            header('Location: pages/manager_dashboard.php');
            exit();
        case 'employee':
            header('Location: pages/employee_dashboard.php');
            exit();
        default:
            // If role is invalid, redirect to login
            header('Location: pages/login.php');
            exit();
    }
} else {
    // If not logged in, redirect to login page
    header('Location: pages/login.php');
    exit();
}
?>
```

## 2. config.php (Database Configuration)
```php
<?php
// config.php - Secure database connection
session_start();

// Database configuration
define('DB_HOST', 'localhost');
define('DB_NAME', 'your_database_name');
define('DB_USER', 'your_db_username');
define('DB_PASS', 'your_db_password');

// Create PDO connection
try {
    $dsn = "sqlsrv:server=" . DB_HOST . ";database=" . DB_NAME;
    $pdo = new PDO($dsn, DB_USER, DB_PASS, [
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC,
        PDO::ATTR_EMULATE_PREPARES => false
    ]);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Application constants
define('APP_NAME', 'FujiFilm Optics Dashboard');
define('COOKIE_EXPIRE', time() + (86400 * 30)); // 30 days
define('SESSION_TIMEOUT', 1800); // 30 minutes
?>
```

## 3. includes/session.php (Session Management)
```php
<?php
// includes/session.php - Session initialization and timeout handling
require_once '../config.php';

// Session security settings
ini_set('session.cookie_httponly', 1);
ini_set('session.cookie_secure', 1);
ini_set('session.use_strict_mode', 1);

// Start session if not already started
if (session_status() == PHP_SESSION_NONE) {
    session_start();
}

// Check session timeout
if (isset($_SESSION['last_activity']) && (time() - $_SESSION['last_activity'] > SESSION_TIMEOUT)) {
    // Last request was more than 30 minutes ago
    session_unset();
    session_destroy();
    header('Location: ../pages/login.php?timeout=1');
    exit();
}

// Update last activity time
$_SESSION['last_activity'] = time();

// Handle "Remember Me" functionality
function handleRememberMe($pdo, $user_id) {
    if (isset($_POST['remember_me'])) {
        // Generate secure token
        $token = bin2hex(random_bytes(32));
        $hashed_token = hash('sha256', $token);
        
        // Store token in database
        $stmt = $pdo->prepare("INSERT INTO remember_tokens (user_id, token, expires_at) VALUES (?, ?, DATEADD(day, 30, GETDATE()))");
        $stmt->execute([$user_id, $hashed_token]);
        
        // Set secure cookie
        setcookie('remember_token', $token, COOKIE_EXPIRE, '/', '', true, true);
    }
}

// Validate remember me token
function validateRememberToken($pdo) {
    if (isset($_COOKIE['remember_token']) && !isset($_SESSION['user_id'])) {
        $token = $_COOKIE['remember_token'];
        $hashed_token = hash('sha256', $token);
        
        $stmt = $pdo->prepare("SELECT user_id FROM remember_tokens WHERE token = ? AND expires_at > GETDATE()");
        $stmt->execute([$hashed_token]);
        $result = $stmt->fetch();
        
        if ($result) {
            // Re-login user
            $_SESSION['user_id'] = $result['user_id'];
            // Refresh token for security
            $new_token = bin2hex(random_bytes(32));
            $new_hashed_token = hash('sha256', $new_token);
            
            $stmt = $pdo->prepare("UPDATE remember_tokens SET token = ? WHERE user_id = ?");
            $stmt->execute([$new_hashed_token, $result['user_id']]);
            
            setcookie('remember_token', $new_token, COOKIE_EXPIRE, '/', '', true, true);
            return true;
        }
    }
    return false;
}

// Check remember me on every page load
validateRememberToken($pdo);
?>
```

## 4. includes/role_check.php (Role-Based Access Control)
```php
<?php
// includes/role_check.php - Centralized role-based permission functions
require_once '../config.php';

// Check if user has specific role
function hasRole($required_role) {
    if (!isset($_SESSION['role'])) {
        return false;
    }
    
    $user_role = $_SESSION['role'];
    
    // Define role hierarchy
    $roles = [
        'admin' => 3,
        'manager' => 2,
        'employee' => 1
    ];
    
    // Check if user role meets or exceeds required role
    return isset($roles[$user_role]) && isset($roles[$required_role]) && 
           $roles[$user_role] >= $roles[$required_role];
}

// Redirect if user doesn't have required role
function requireRole($required_role, $redirect_url = '../pages/login.php') {
    if (!hasRole($required_role)) {
        header("Location: $redirect_url");
        exit();
    }
}

// Get current user's role
function getCurrentUserRole() {
    return isset($_SESSION['role']) ? $_SESSION['role'] : null;
}

// Check if user can perform specific action
function canPerformAction($action) {
    $role = getCurrentUserRole();
    
    switch ($action) {
        case 'create':
        case 'delete':
            return $role === 'admin';
        case 'update':
            return $role === 'admin' || $role === 'manager';
        case 'read':
            return true; // All roles can read
        default:
            return false;
    }
}
?>
```

## 5. includes/csrf.php (CSRF Protection)
```php
<?php
// includes/csrf.php - CSRF token generation/validation
session_start();

// Generate CSRF token
function generateCSRFToken() {
    if (!isset($_SESSION['csrf_token'])) {
        $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
    }
    return $_SESSION['csrf_token'];
}

// Validate CSRF token
function validateCSRFToken($token) {
    return isset($_SESSION['csrf_token']) && hash_equals($_SESSION['csrf_token'], $token);
}

// Get CSRF token for forms
function getCSRFToken() {
    return isset($_SESSION['csrf_token']) ? $_SESSION['csrf_token'] : '';
}
?>
```

## 6. includes/header.php (Page Header)
```php
<?php
// includes/header.php - Page header with CSS/JS assets
require_once 'session.php';
require_once 'role_check.php';
require_once 'csrf.php';

// Generate CSRF token for this page
$csrf_token = generateCSRFToken();
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title><?php echo APP_NAME; ?></title>
    
    <!-- AdminLTE CSS -->
    <link rel="stylesheet" href="../assets/plugins/fontawesome-free/css/all.min.css">
    <link rel="stylesheet" href="../assets/dist/css/adminlte.min.css">
    <link rel="stylesheet" href="../assets/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
    
    <!-- jQuery -->
    <script src="../assets/plugins/jquery/jquery.min.js"></script>
</head>
<body class="hold-transition sidebar-mini">
<div class="wrapper">
```

## 7. includes/footer.php (Page Footer)
```php
<?php
// includes/footer.php - Footer with company info + scripts
?>
    </div>
    <!-- /.content-wrapper -->
    
    <footer class="main-footer">
        <strong>FujiFilm Optics Philippines &copy; <?php echo date('Y'); ?></strong>
        <div class="float-right d-none d-sm-inline-block">
            <b>Version</b> 1.0.0
        </div>
    </footer>

    <!-- AdminLTE JS -->
    <script src="../assets/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="../assets/dist/js/adminlte.js"></script>
    <script src="../assets/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="../assets/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    
    <script>
        // Global AJAX setup with CSRF token
        $.ajaxSetup({
            beforeSend: function(xhr, settings) {
                if (!/^(GET|HEAD|OPTIONS)$/i.test(settings.type) && !this.crossDomain) {
                    xhr.setRequestHeader("X-CSRF-Token", "<?php echo $csrf_token; ?>");
                }
            }
        });
    </script>
</body>
</html>
```

## 8. includes/sidebar.php (Dynamic Sidebar Menu)
```php
<?php
// includes/sidebar.php - Dynamic sidebar menu based on user roles
require_once 'role_check.php';

$role = getCurrentUserRole();
?>
<!-- Main Sidebar Container -->
<aside class="main-sidebar sidebar-dark-primary elevation-4">
    <!-- Brand Logo -->
    <a href="index.php" class="brand-link">
        <span class="brand-text font-weight-light">FujiFilm Optics</span>
    </a>

    <!-- Sidebar -->
    <div class="sidebar">
        <!-- Sidebar user panel -->
        <div class="user-panel mt-3 pb-3 mb-3 d-flex">
            <div class="info">
                <a href="#" class="d-block"><?php echo $_SESSION['username'] ?? 'User'; ?></a>
                <small class="text-muted"><?php echo ucfirst($role); ?></small>
            </div>
        </div>

        <!-- Sidebar Menu -->
        <nav class="mt-2">
            <ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu">
                <li class="nav-item">
                    <a href="<?php echo $role; ?>_dashboard.php" class="nav-link active">
                        <i class="nav-icon fas fa-tachometer-alt"></i>
                        <p>Dashboard</p>
                    </a>
                </li>
                
                <?php if (hasRole('admin') || hasRole('manager')): ?>
                <li class="nav-item">
                    <a href="#" class="nav-link">
                        <i class="nav-icon fas fa-users"></i>
                        <p>
                            User Management
                            <i class="right fas fa-angle-left"></i>
                        </p>
                    </a>
                    <ul class="nav nav-treeview">
                        <?php if (hasRole('admin')): ?>
                        <li class="nav-item">
                            <a href="#" class="nav-link" id="add-user-btn">
                                <i class="far fa-circle nav-icon"></i>
                                <p>Add User</p>
                            </a>
                        </li>
                        <?php endif; ?>
                        <li class="nav-item">
                            <a href="#" class="nav-link" id="view-users-btn">
                                <i class="far fa-circle nav-icon"></i>
                                <p>View Users</p>
                            </a>
                        </li>
                    </ul>
                </li>
                <?php endif; ?>
                
                <li class="nav-item">
                    <a href="logout.php" class="nav-link">
                        <i class="nav-icon fas fa-sign-out-alt"></i>
                        <p>Logout</p>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</aside>
```

## 9. models/UserModel.php (User Authentication & CRUD)
```php
<?php
// models/UserModel.php - User authentication & CRUD operations
require_once '../config.php';

class UserModel {
    private $pdo;
    
    public function __construct($pdo) {
        $this->pdo = $pdo;
    }
    
    // Authenticate user
    public function authenticate($username, $password) {
        $stmt = $this->pdo->prepare("SELECT id, username, password, role FROM users WHERE username = ?");
        $stmt->execute([$username]);
        $user = $stmt->fetch();
        
        if ($user && password_verify($password, $user['password'])) {
            return $user;
        }
        return false;
    }
    
    // Get all users
    public function getAllUsers() {
        $stmt = $this->pdo->prepare("SELECT id, username, role, created_at FROM users ORDER BY id");
        $stmt->execute();
        return $stmt->fetchAll();
    }
    
    // Get user by ID
    public function getUserById($id) {
        $stmt = $this->pdo->prepare("SELECT id, username, role FROM users WHERE id = ?");
        $stmt->execute([$id]);
        return $stmt->fetch();
    }
    
    // Create new user
    public function createUser($username, $password, $role) {
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        $stmt = $this->pdo->prepare("INSERT INTO users (username, password, role) VALUES (?, ?, ?)");
        return $stmt->execute([$username, $hashed_password, $role]);
    }
    
    // Update user
    public function updateUser($id, $username, $role) {
        $stmt = $this->pdo->prepare("UPDATE users SET username = ?, role = ? WHERE id = ?");
        return $stmt->execute([$username, $role, $id]);
    }
    
    // Update user password
    public function updatePassword($id, $password) {
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        $stmt = $this->pdo->prepare("UPDATE users SET password = ? WHERE id = ?");
        return $stmt->execute([$hashed_password, $id]);
    }
    
    // Delete user
    public function deleteUser($id) {
        $stmt = $this->pdo->prepare("DELETE FROM users WHERE id = ?");
        return $stmt->execute([$id]);
    }
    
    // Check if username exists
    public function usernameExists($username, $exclude_id = null) {
        if ($exclude_id) {
            $stmt = $this->pdo->prepare("SELECT COUNT(*) FROM users WHERE username = ? AND id != ?");
            $stmt->execute([$username, $exclude_id]);
        } else {
            $stmt = $this->pdo->prepare("SELECT COUNT(*) FROM users WHERE username = ?");
            $stmt->execute([$username]);
        }
        return $stmt->fetchColumn() > 0;
    }
}
?>
```

## 10. pages/login.php (Login Page)
```php
<?php
// pages/login.php - Login page
require_once '../config.php';
require_once '../includes/session.php';
require_once '../includes/csrf.php';

// If already logged in, redirect to dashboard
if (isset($_SESSION['user_id'])) {
    header('Location: index.php');
    exit();
}

$error = '';
$csrf_token = generateCSRFToken();

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Validate CSRF token
    if (!validateCSRFToken($_POST['csrf_token'])) {
        $error = 'Invalid request. Please try again.';
    } else {
        $username = trim($_POST['username']);
        $password = $_POST['password'];
        
        if (empty($username) || empty($password)) {
            $error = 'Please enter both username and password.';
        } else {
            require_once '../models/UserModel.php';
            $userModel = new UserModel($pdo);
            $user = $userModel->authenticate($username, $password);
            
            if ($user) {
                // Set session variables
                $_SESSION['user_id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                $_SESSION['role'] = $user['role'];
                $_SESSION['last_activity'] = time();
                
                // Handle "Remember Me"
                if (isset($_POST['remember_me'])) {
                    handleRememberMe($pdo, $user['id']);
                }
                
                // Redirect based on role
                switch ($user['role']) {
                    case 'admin':
                        header('Location: admin_dashboard.php');
                        exit();
                    case 'manager':
                        header('Location: manager_dashboard.php');
                        exit();
                    case 'employee':
                        header('Location: employee_dashboard.php');
                        exit();
                    default:
                        $error = 'Invalid user role.';
                }
            } else {
                $error = 'Invalid username or password.';
            }
        }
    }
}
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title><?php echo APP_NAME; ?> - Login</title>
    
    <!-- AdminLTE CSS -->
    <link rel="stylesheet" href="../assets/plugins/fontawesome-free/css/all.min.css">
    <link rel="stylesheet" href="../assets/plugins/icheck-bootstrap/icheck-bootstrap.min.css">
    <link rel="stylesheet" href="../assets/dist/css/adminlte.min.css">
</head>
<body class="hold-transition login-page">
<div class="login-box">
    <div class="card card-outline card-primary">
        <div class="card-header text-center">
            <a href="#" class="h1"><b>FujiFilm</b>Optics</a>
        </div>
        <div class="card-body">
            <p class="login-box-msg">Sign in to start your session</p>
            
            <?php if (!empty($error)): ?>
                <div class="alert alert-danger"><?php echo htmlspecialchars($error); ?></div>
            <?php endif; ?>
            
            <?php if (isset($_GET['timeout'])): ?>
                <div class="alert alert-info">Your session has expired. Please login again.</div>
            <?php endif; ?>
            
            <form action="login.php" method="post">
                <input type="hidden" name="csrf_token" value="<?php echo $csrf_token; ?>">
                
                <div class="input-group mb-3">
                    <input type="text" class="form-control" placeholder="Username" name="username" required>
                    <div class="input-group-append">
                        <div class="input-group-text">
                            <span class="fas fa-user"></span>
                        </div>
                    </div>
                </div>
                
                <div class="input-group mb-3">
                    <input type="password" class="form-control" placeholder="Password" name="password" required>
                    <div class="input-group-append">
                        <div class="input-group-text">
                            <span class="fas fa-lock"></span>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-8">
                        <div class="icheck-primary">
                            <input type="checkbox" id="remember" name="remember_me">
                            <label for="remember">Remember Me</label>
                        </div>
                    </div>
                    <div class="col-4">
                        <button type="submit" class="btn btn-primary btn-block">Sign In</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- AdminLTE JS -->
<script src="../assets/plugins/jquery/jquery.min.js"></script>
<script src="../assets/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="../assets/dist/js/adminlte.min.js"></script>
</body>
</html>
```

## 11. pages/admin_dashboard.php (Admin Dashboard)
```php
<?php
// pages/admin_dashboard.php - Admin dashboard
require_once '../includes/session.php';
require_once '../includes/role_check.php';
require_once '../includes/header.php';

// Require admin role
requireRole('admin');
?>
<?php include '../includes/sidebar.php'; ?>

<!-- Content Wrapper -->
<div class="content-wrapper">
    <!-- Content Header -->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0">Admin Dashboard</h1>
                </div>
            </div>
        </div>
    </div>

    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-3 col-6">
                    <div class="small-box bg-info">
                        <div class="inner">
                            <h3>150</h3>
                            <p>Total Users</p>
                        </div>
                        <div class="icon">
                            <i class="fas fa-users"></i>
                        </div>
                    </div>
                </div>
                
                <div class="col-lg-3 col-6">
                    <div class="small-box bg-success">
                        <div class="inner">
                            <h3>53<sup style="font-size: 20px">%</sup></h3>
                            <p>System Usage</p>
                        </div>
                        <div class="icon">
                            <i class="fas fa-chart-bar"></i>
                        </div>
                    </div>
                </div>
                
                <div class="col-lg-3 col-6">
                    <div class="small-box bg-warning">
                        <div class="inner">
                            <h3>44</h3>
                            <p>User Registrations</p>
                        </div>
                        <div class="icon">
                            <i class="fas fa-user-plus"></i>
                        </div>
                    </div>
                </div>
                
                <div class="col-lg-3 col-6">
                    <div class="small-box bg-danger">
                        <div class="inner">
                            <h3>65</h3>
                            <p>Unique Visitors</p>
                        </div>
                        <div class="icon">
                            <i class="fas fa-chart-pie"></i>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- User Management Table -->
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">User Management</h3>
                            <div class="card-tools">
                                <button type="button" class="btn btn-tool" id="add-user-btn">
                                    <i class="fas fa-plus"></i> Add User
                                </button>
                            </div>
                        </div>
                        <div class="card-body">
                            <table id="usersTable" class="table table-bordered table-striped">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Username</th>
                                        <th>Role</th>
                                        <th>Created At</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <?php
                                    require_once '../models/UserModel.php';
                                    $userModel = new UserModel($pdo);
                                    $users = $userModel->getAllUsers();
                                    
                                    foreach ($users as $user): ?>
                                    <tr>
                                        <td><?php echo htmlspecialchars($user['id']); ?></td>
                                        <td><?php echo htmlspecialchars($user['username']); ?></td>
                                        <td><?php echo htmlspecialchars($user['role']); ?></td>
                                        <td><?php echo htmlspecialchars($user['created_at']); ?></td>
                                        <td>
                                            <button class="btn btn-info btn-sm edit-user" data-id="<?php echo $user['id']; ?>">
                                                <i class="fas fa-pencil-alt"></i> Edit
                                            </button>
                                            <button class="btn btn-danger btn-sm delete-user" data-id="<?php echo $user['id']; ?>">
                                                <i class="fas fa-trash"></i> Delete
                                            </button>
                                        </td>
                                    </tr>
                                    <?php endforeach; ?>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

<!-- Add User Modal -->
<div class="modal fade" id="addUserModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Add New User</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <form id="addUserForm">
                    <input type="hidden" name="csrf_token" value="<?php echo $csrf_token; ?>">
                    <div class="form-group">
                        <label>Username</label>
                        <input type="text" class="form-control" name="username" required>
                    </div>
                    <div class="form-group">
                        <label>Password</label>
                        <input type="password" class="form-control" name="password" required>
                    </div>
                    <div class="form-group">
                        <label>Role</label>
                        <select class="form-control" name="role" required>
                            <option value="admin">Admin</option>
                            <option value="manager">Manager</option>
                            <option value="employee">Employee</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveUserBtn">Save User</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit User Modal -->
<div class="modal fade" id="editUserModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Edit User</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <form id="editUserForm">
                    <input type="hidden" name="csrf_token" value="<?php echo $csrf_token; ?>">
                    <input type="hidden" name="id" id="editUserId">
                    <div class="form-group">
                        <label>Username</label>
                        <input type="text" class="form-control" name="username" id="editUsername" required>
                    </div>
                    <div class="form-group">
                        <label>Role</label>
                        <select class="form-control" name="role" id="editRole" required>
                            <option value="admin">Admin</option>
                            <option value="manager">Manager</option>
                            <option value="employee">Employee</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="updateUserBtn">Update User</button>
            </div>
        </div>
    </div>
</div>

<script>
$(document).ready(function() {
    // Initialize DataTable
    $('#usersTable').DataTable({
        "responsive": true,
        "autoWidth": false
    });
    
    // Add User Button
    $('#add-user-btn').click(function() {
        $('#addUserForm')[0].reset();
        $('#addUserModal').modal('show');
    });
    
    // Save User
    $('#saveUserBtn').click(function() {
        $.ajax({
            url: '../ajax/add_user.php',
            method: 'POST',
            data: $('#addUserForm').serialize(),
            success: function(response) {
                if (response.success) {
                    location.reload();
                } else {
                    alert('Error: ' + response.message);
                }
            },
            error: function() {
                alert('An error occurred while saving the user.');
            }
        });
    });
    
    // Edit User
    $('.edit-user').click(function() {
        var userId = $(this).data('id');
        $.ajax({
            url: '../ajax/update_user.php',
            method: 'GET',
            data: { id: userId, action: 'get' },
            success: function(response) {
                if (response.success) {
                    $('#editUserId').val(response.user.id);
                    $('#editUsername').val(response.user.username);
                    $('#editRole').val(response.user.role);
                    $('#editUserModal').modal('show');
                } else {
                    alert('Error: ' + response.message);
                }
            }
        });
    });
    
    // Update User
    $('#updateUserBtn').click(function() {
        $.ajax({
            url: '../ajax/update_user.php',
            method: 'POST',
            data: $('#editUserForm').serialize() + '&action=update',
            success: function(response) {
                if (response.success) {
                    location.reload();
                } else {
                    alert('Error: ' + response.message);
                }
            },
            error: function() {
                alert('An error occurred while updating the user.');
            }
        });
    });
    
    // Delete User
    $('.delete-user').click(function() {
        if (confirm('Are you sure you want to delete this user?')) {
            var userId = $(this).data('id');
            $.ajax({
                url: '../ajax/delete_user.php',
                method: 'POST',
                data: { id: userId, csrf_token: '<?php echo $csrf_token; ?>' },
                success: function(response) {
                    if (response.success) {
                        location.reload();
                    } else {
                        alert('Error: ' + response.message);
                    }
                },
                error: function() {
                    alert('An error occurred while deleting the user.');
                }
            });
        }
    });
});
</script>

<?php include '../includes/footer.php'; ?>
```

## 12. pages/manager_dashboard.php (Manager Dashboard)
```php
<?php
// pages/manager_dashboard.php - Manager dashboard
require_once '../includes/session.php';
require_once '../includes/role_check.php';
require_once '../includes/header.php';

// Require manager or admin role
requireRole('manager');
?>
<?php include '../includes/sidebar.php'; ?>

<!-- Content Wrapper -->
<div class="content-wrapper">
    <!-- Content Header -->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0">Manager Dashboard</h1>
                </div>
            </div>
        </div>
    </div>

    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-3 col-6">
                    <div class="small-box bg-info">
                        <div class="inner">
                            <h3>150</h3>
                            <p>Total Users</p>
                        </div>
                        <div class="icon">
                            <i class="fas fa-users"></i>
                        </div>
                    </div>
                </div>
                
                <div class="col-lg-3 col-6">
                    <div class="small-box bg-success">
                        <div class="inner">
                            <h3>53<sup style="font-size: 20px">%</sup></h3>
                            <p>System Usage</p>
                        </div>
                        <div class="icon">
                            <i class="fas fa-chart-bar"></i>
                        </div>
                    </div>
                </div>
                
                <div class="col-lg-3 col-6">
                    <div class="small-box bg-warning">
                        <div class="inner">
                            <h3>44</h3>
                            <p>User Registrations</p>
                        </div>
                        <div class="icon">
                            <i class="fas fa-user-plus"></i>
                        </div>
                    </div>
                </div>
                
                <div class="col-lg-3 col-6">
                    <div class="small-box bg-danger">
                        <div class="inner">
                            <h3>65</h3>
                            <p>Unique Visitors</p>
                        </div>
                        <div class="icon">
                            <i class="fas fa-chart-pie"></i>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- User Management Table (Read-only with edit capability) -->
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">User Management</h3>
                        </div>
                        <div class="card-body">
                            <table id="usersTable" class="table table-bordered table-striped">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Username</th>
                                        <th>Role</th>
                                        <th>Created At</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <?php
                                    require_once '../models/UserModel.php';
                                    $userModel = new UserModel($pdo);
                                    $users = $userModel->getAllUsers();
                                    
                                    foreach ($users as $user): ?>
                                    <tr>
                                        <td><?php echo htmlspecialchars($user['id']); ?></td>
                                        <td><?php echo htmlspecialchars($user['username']); ?></td>
                                        <td><?php echo htmlspecialchars($user['role']); ?></td>
                                        <td><?php echo htmlspecialchars($user['created_at']); ?></td>
                                        <td>
                                            <button class="btn btn-info btn-sm edit-user" data-id="<?php echo $user['id']; ?>">
                                                <i class="fas fa-pencil-alt"></i> Edit
                                            </button>
                                        </td>
                                    </tr>
                                    <?php endforeach; ?>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

<!-- Edit User Modal -->
<div class="modal fade" id="editUserModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Edit User</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <form id="editUserForm">
                    <input type="hidden" name="csrf_token" value="<?php echo $csrf_token; ?>">
                    <input type="hidden" name="id" id="editUserId">
                    <div class="form-group">
                        <label>Username</label>
                        <input type="text" class="form-control" name="username" id="editUsername" required>
                    </div>
                    <div class="form-group">
                        <label>Role</label>
                        <select class="form-control" name="role" id="editRole" required>
                            <option value="admin">Admin</option>
                            <option value="manager">Manager</option>
                            <option value="employee">Employee</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="updateUserBtn">Update User</button>
            </div>
        </div>
    </div>
</div>

<script>
$(document).ready(function() {
    // Initialize DataTable
    $('#usersTable').DataTable({
        "responsive": true,
        "autoWidth": false
    });
    
    // Edit User
    $('.edit-user').click(function() {
        var userId = $(this).data('id');
        $.ajax({
            url: '../ajax/update_user.php',
            method: 'GET',
            data: { id: userId, action: 'get' },
            success: function(response) {
                if (response.success) {
                    $('#editUserId').val(response.user.id);
                    $('#editUsername').val(response.user.username);
                    $('#editRole').val(response.user.role);
                    $('#editUserModal').modal('show');
                } else {
                    alert('Error: ' + response.message);
                }
            }
        });
    });
    
    // Update User
    $('#updateUserBtn').click(function() {
        $.ajax({
            url: '../ajax/update_user.php',
            method: 'POST',
            data: $('#editUserForm').serialize() + '&action=update',
            success: function(response) {
                if (response.success) {
                    location.reload();
                } else {
                    alert('Error: ' + response.message);
                }
            },
            error: function() {
                alert('An error occurred while updating the user.');
            }
        });
    });
});
</script>

<?php include '../includes/footer.php'; ?>
```

## 13. pages/employee_dashboard.php (Employee Dashboard)
```php
<?php
// pages/employee_dashboard.php - Employee dashboard
require_once '../includes/session.php';
require_once '../includes/role_check.php';
require_once '../includes/header.php';

// Require employee role or higher
requireRole('employee');
?>
<?php include '../includes/sidebar.php'; ?>

<!-- Content Wrapper -->
<div class="content-wrapper">
    <!-- Content Header -->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0">Employee Dashboard</h1>
                </div>
            </div>
        </div>
    </div>

    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-3 col-6">
                    <div class="small-box bg-info">
                        <div class="inner">
                            <h3>150</h3>
                            <p>Total Users</p>
                        </div>
                        <div class="icon">
                            <i class="fas fa-users"></i>
                        </div>
                    </div>
                </div>
                
                <div class="col-lg-3 col-6">
                    <div class="small-box bg-success">
                        <div class="inner">
                            <h3>53<sup style="font-size: 20px">%</sup></h3>
                            <p>System Usage</p>
                        </div>
                        <div class="icon">
                            <i class="fas fa-chart-bar"></i>
                        </div>
                    </div>
                </div>
                
                <div class="col-lg-3 col-6">
                    <div class="small-box bg-warning">
                        <div class="inner">
                            <h3>44</h3>
                            <p>User Registrations</p>
                        </div>
                        <div class="icon">
                            <i class="fas fa-user-plus"></i>
                        </div>
                    </div>
                </div>
                
                <div class="col-lg-3 col-6">
                    <div class="small-box bg-danger">
                        <div class="inner">
                            <h3>65</h3>
                            <p>Unique Visitors</p>
                        </div>
                        <div class="icon">
                            <i class="fas fa-chart-pie"></i>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- User List (Read-only) -->
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">User List</h3>
                        </div>
                        <div class="card-body">
                            <table id="usersTable" class="table table-bordered table-striped">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Username</th>
                                        <th>Role</th>
                                        <th>Created At</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <?php
                                    require_once '../models/UserModel.php';
                                    $userModel = new UserModel($pdo);
                                    $users = $userModel->getAllUsers();
                                    
                                    foreach ($users as $user): ?>
                                    <tr>
                                        <td><?php echo htmlspecialchars($user['id']); ?></td>
                                        <td><?php echo htmlspecialchars($user['username']); ?></td>
                                        <td><?php echo htmlspecialchars($user['role']); ?></td>
                                        <td><?php echo htmlspecialchars($user['created_at']); ?></td>
                                    </tr>
                                    <?php endforeach; ?>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

<script>
$(document).ready(function() {
    // Initialize DataTable
    $('#usersTable').DataTable({
        "responsive": true,
        "autoWidth": false
    });
});
</script>

<?php include '../includes/footer.php'; ?>
```

## 14. pages/logout.php (Logout Page)
```php
<?php
// pages/logout.php - Logout page
require_once '../config.php';

// Destroy session
session_start();
session_unset();
session_destroy();

// Delete remember me cookie
if (isset($_COOKIE['remember_token'])) {
    setcookie('remember_token', '', time() - 3600, '/', '', true, true);
    
    // Delete token from database
    try {
        $stmt = $pdo->prepare("DELETE FROM remember_tokens WHERE token = ?");
        $stmt->execute([hash('sha256', $_COOKIE['remember_token'])]);
    } catch (Exception $e) {
        // Log error but don't show to user
    }
}

// Redirect to login page
header('Location: login.php?logout=1');
exit();
?>
```

## 15. ajax/login.php (AJAX Login Handler)
```php
<?php
// ajax/login.php - AJAX login handler
header('Content-Type: application/json');

require_once '../config.php';
require_once '../includes/session.php';
require_once '../includes/csrf.php';

$response = ['success' => false, 'message' => ''];

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Validate CSRF token
    if (!validateCSRFToken($_POST['csrf_token'])) {
        $response['message'] = 'Invalid request.';
        echo json_encode($response);
        exit();
    }
    
    $username = trim($_POST['username']);
    $password = $_POST['password'];
    
    if (empty($username) || empty($password)) {
        $response['message'] = 'Please enter both username and password.';
        echo json_encode($response);
        exit();
    }
    
    require_once '../models/UserModel.php';
    $userModel = new UserModel($pdo);
    $user = $userModel->authenticate($username, $password);
    
    if ($user) {
        // Set session variables
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        $_SESSION['role'] = $user['role'];
        $_SESSION['last_activity'] = time();
        
        // Handle "Remember Me"
        if (isset($_POST['remember_me'])) {
            handleRememberMe($pdo, $user['id']);
        }
        
        $response['success'] = true;
        $response['redirect'] = $user['role'] . '_dashboard.php';
    } else {
        $response['message'] = 'Invalid username or password.';
    }
} else {
    $response['message'] = 'Invalid request method.';
}

echo json_encode($response);
?>
```

## 16. ajax/add_user.php (AJAX Add User Handler)
```php
<?php
// ajax/add_user.php - AJAX add user handler
header('Content-Type: application/json');

require_once '../config.php';
require_once '../includes/session.php';
require_once '../includes/role_check.php';
require_once '../includes/csrf.php';

$response = ['success' => false, 'message' => ''];

// Check if user has admin role
if (!hasRole('admin')) {
    $response['message'] = 'Access denied.';
    echo json_encode($response);
    exit();
}

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Validate CSRF token
    if (!validateCSRFToken($_POST['csrf_token'])) {
        $response['message'] = 'Invalid request.';
        echo json_encode($response);
        exit();
    }
    
    $username = trim($_POST['username']);
    $password = $_POST['password'];
    $role = $_POST['role'];
    
    // Validate input
    if (empty($username) || empty($password) || empty($role)) {
        $response['message'] = 'All fields are required.';
        echo json_encode($response);
        exit();
    }
    
    if (!in_array($role, ['admin', 'manager', 'employee'])) {
        $response['message'] = 'Invalid role.';
        echo json_encode($response);
        exit();
    }
    
    if (strlen($password) < 6) {
        $response['message'] = 'Password must be at least 6 characters.';
        echo json_encode($response);
        exit();
    }
    
    require_once '../models/UserModel.php';
    $userModel = new UserModel($pdo);
    
    // Check if username already exists
    if ($userModel->usernameExists($username)) {
        $response['message'] = 'Username already exists.';
        echo json_encode($response);
        exit();
    }
    
    // Create user
    if ($userModel->createUser($username, $password, $role)) {
        $response['success'] = true;
        $response['message'] = 'User created successfully.';
    } else {
        $response['message'] = 'Failed to create user.';
    }
} else {
    $response['message'] = 'Invalid request method.';
}

echo json_encode($response);
?>
```

## 17. ajax/update_user.php (AJAX Update User Handler)
```php
<?php
// ajax/update_user.php - AJAX update user handler
header('Content-Type: application/json');

require_once '../config.php';
require_once '../includes/session.php';
require_once '../includes/role_check.php';
require_once '../includes/csrf.php';

$response = ['success' => false, 'message' => ''];

// Check if user has required role (admin or manager)
if (!hasRole('admin') && !hasRole('manager')) {
    $response['message'] = 'Access denied.';
    echo json_encode($response);
    exit();
}

if ($_SERVER['REQUEST_METHOD'] === 'GET' && isset($_GET['action']) && $_GET['action'] === 'get') {
    // Get user data
    $id = intval($_GET['id']);
    
    if ($id <= 0) {
        $response['message'] = 'Invalid user ID.';
        echo json_encode($response);
        exit();
    }
    
    require_once '../models/UserModel.php';
    $userModel = new UserModel($pdo);
    $user = $userModel->getUserById($id);
    
    if ($user) {
        $response['success'] = true;
        $response['user'] = $user;
    } else {
        $response['message'] = 'User not found.';
    }
    
    echo json_encode($response);
    exit();
}

if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['action']) && $_POST['action'] === 'update') {
    // Validate CSRF token
    if (!validateCSRFToken($_POST['csrf_token'])) {
        $response['message'] = 'Invalid request.';
        echo json_encode($response);
        exit();
    }
    
    $id = intval($_POST['id']);
    $username = trim($_POST['username']);
    $role = $_POST['role'];
    
    // Validate input
    if ($id <= 0 || empty($username) || empty($role)) {
        $response['message'] = 'All fields are required.';
        echo json_encode($response);
        exit();
    }
    
    if (!in_array($role, ['admin', 'manager', 'employee'])) {
        $response['message'] = 'Invalid role.';
        echo json_encode($response);
        exit();
    }
    
    require_once '../models/UserModel.php';
    $userModel = new UserModel($pdo);
    
    // Check if username already exists for another user
    if ($userModel->usernameExists($username, $id)) {
        $response['message'] = 'Username already exists.';
        echo json_encode($response);
        exit();
    }
    
    // Update user
    if ($userModel->updateUser($id, $username, $role)) {
        $response['success'] = true;
        $response['message'] = 'User updated successfully.';
    } else {
        $response['message'] = 'Failed to update user.';
    }
} else {
    $response['message'] = 'Invalid request.';
}

echo json_encode($response);
?>
```

## 18. ajax/delete_user.php (AJAX Delete User Handler)
```php
<?php
// ajax/delete_user.php - AJAX delete user handler
header('Content-Type: application/json');

require_once '../config.php';
require_once '../includes/session.php';
require_once '../includes/role_check.php';
require_once '../includes/csrf.php';

$response = ['success' => false, 'message' => ''];

// Check if user has admin role
if (!hasRole('admin')) {
    $response['message'] = 'Access denied.';
    echo json_encode($response);
    exit();
}

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Validate CSRF token
    if (!validateCSRFToken($_POST['csrf_token'])) {
        $response['message'] = 'Invalid request.';
        echo json_encode($response);
        exit();
    }
    
    $id = intval($_POST['id']);
    
    if ($id <= 0) {
        $response['message'] = 'Invalid user ID.';
        echo json_encode($response);
        exit();
    }
    
    // Prevent deleting self
    if ($id == $_SESSION['user_id']) {
        $response['message'] = 'You cannot delete yourself.';
        echo json_encode($response);
        exit();
    }
    
    require_once '../models/UserModel.php';
    $userModel = new UserModel($pdo);
    
    // Delete user
    if ($userModel->deleteUser($id)) {
        $response['success'] = true;
        $response['message'] = 'User deleted successfully.';
    } else {
        $response['message'] = 'Failed to delete user.';
    }
} else {
    $response['message'] = 'Invalid request method.';
}

echo json_encode($response);
?>
```

## Database Schema (SQL for MSSQL)
```sql
-- Create database tables
CREATE TABLE users (
    id INT IDENTITY(1,1) PRIMARY KEY,
    username NVARCHAR(50) UNIQUE NOT NULL,
    password NVARCHAR(255) NOT NULL,
    role NVARCHAR(20) NOT NULL CHECK (role IN ('admin', 'manager', 'employee')),
    created_at DATETIME2 DEFAULT GETDATE()
);

CREATE TABLE remember_tokens (
    id INT IDENTITY(1,1) PRIMARY KEY,
    user_id INT NOT NULL,
    token NVARCHAR(64) NOT NULL,
    expires_at DATETIME2 NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Insert sample users
INSERT INTO users (username, password, role) VALUES 
('admin', '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', 'admin'),
('manager', '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', 'manager'),
('employee', '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', 'employee');
```

This complete PHP web application with AdminLTE provides:

1. **Role-Based Access Control** - Admin (full CRUD), Manager (edit/update), Employee (read-only)
2. **Secure Authentication** - Password hashing, session management, CSRF protection
3. **"Remember Me" Functionality** - Token-based persistent login
4. **AJAX CRUD Operations** - User management with role-based restrictions
5. **AdminLTE Integration** - Responsive dashboard with dynamic sidebar
6. **Security Features** - Prepared statements, input validation, secure session handling
7. **Proper Error Handling** - JSON responses for AJAX operations

The application follows best practices for security and maintainability with a clear separation of concerns between models, views, and controllers.